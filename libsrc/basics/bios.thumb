 @ Swi functions.

    .text
    .code	16

    .align	2
    .global	SoftReset
    .thumb_func
SoftReset:
    swi		0x00
    bx		lr

   	.align	2
    .global	RegisterRamReset
    .thumb_func
RegisterRamReset:
    swi		0x01
    bx		lr

    .align	2
    .global	Halt
    .thumb_func
Halt:
    swi		0x02
    bx		lr

    .align	2
    .global	Stop
    .thumb_func
Stop:
    swi		0x03
    bx		lr

    .align	2
    .global	IntrWait
    .thumb_func
IntrWait:
    swi		0x4
    bx		lr

    .align	2
    .global	VBlankIntrWait
    .thumb_func
VBlankIntrWait:
    swi		0x05
    bx		lr

    .align	2
    .global	Div
    .thumb_func
Div:
    swi		0x06
    bx		lr

    .align	2
    .global	DivArm
    .thumb_func
DivArm:
    swi		0x07
    bx		lr

    .align	2
    .global	Sqrt
    .thumb_func
Sqrt:
    swi		0x08
    bx		lr

    .align	2
    .global	ArcTan
    .thumb_func
ArcTan:
    swi		0x09
    bx		lr

    .align	2
    .global	ArcTan2
    .thumb_func
ArcTan2:
    swi		0x0A
    bx		lr

    .align	2
    .global	CpuSet
    .thumb_func
CpuSet:
    swi		0x0B
    bx		lr

    .align	2
    .global	CpuFastSet
    .thumb_func
CpuFastSet:
    swi		0x0C
    bx		lr

    .align	2
    .global	BiosChecksum
    .thumb_func
BiosChecksum:
    swi		0x0D
    bx		lr

    .align	2
    .global	BgAffineSet
    .thumb_func
BgAffineSet:
    swi		0x0E
    bx		lr

    .align	2
    .global	ObjAffineSet
    .thumb_func
ObjAffineSet:
    swi		0x0F
    bx		lr

    .align	2
    .global	BitUnPack
    .thumb_func
BitUnPack:
    swi		0x10
    bx		lr

    .align	2
    .global	LZ77UnCompWRAM
    .thumb_func
LZ77UnCompWRAM:
    swi		0x11
    bx		lr

    .align	2
    .global	LZ77UnCompVRAM
    .thumb_func
LZ77UnCompVRAM:
    swi		0x12
    bx		lr

    .align	2
    .global	HuffUnComp
    .thumb_func
HuffUnComp:
    swi		0x13
    bx		lr

    .align	2
    .global	RLUnCompWRAM
    .thumb_func
RLUnCompWRAM:
    swi		0x14
    bx		lr

    .align	2
    .global	RLUnCompVRAM
    .thumb_func
RLUnCompVRAM:
    swi		0x15
    bx		lr

    .align	2
    .global	Diff8bitUnFilterWRAM
    .thumb_func
Diff8bitUnFilterWRAM:
    swi		0x16
    bx		lr

    .align	2
    .global	Diff8bitUnFilterVRAM
    .thumb_func
Diff8bitUnFilterVRAM:
    swi		0x17
    bx		lr

    .align	2
    .global	Diff16bitUnFilter
    .thumb_func
Diff16bitUnFilter:
    swi		0x18
    bx		lr

    .align	2
    .global	SoundBias
    .thumb_func
SoundBias:
    swi		0x19
    bx		lr

    .align	2
    .global	SoundDriverInit
    .thumb_func
SoundDriverInit:
    swi		0x1A
    bx		lr

    .align	2
    .global	SoundDriverMode
    .thumb_func
SoundDriverMode:
    swi		0x1B
    bx		lr

    .align	2
    .global	SoundDriverMain
    .thumb_func
SoundDriverMain:
    swi		0x1C
    bx		lr

    .align	2
    .global	SoundDriverVSync
    .thumb_func
SoundDriverVSync:
    swi		0x1D
    bx		lr

    .align	2
    .global	SoundChannelClear
    .thumb_func
SoundChannelClear:
    swi		0x1E
    bx		lr

    .align	2
    .global	MIDIKey2Freq
    .thumb_func
MIDIKey2Freq:
    swi		0x1F
    bx		lr

    .align	2
    .global	MusicPlayerOpen
    .thumb_func
MusicPlayerOpen:
    swi		0x20
    bx		lr

    .align	2
    .global	MusicPlayerStart
    .thumb_func
MusicPlayerStart:
    swi		0x21
    bx		lr

    .align	2
    .global	MusicPlayerStop
    .thumb_func
MusicPlayerStop:
    swi		0x22
    bx		lr

    .align	2
    .global	MusicPlayerContinue
    .thumb_func
MusicPlayerContinue:
    swi		0x23
    bx		lr

    .align	2
    .global	MusicPlayerFadeOut
    .thumb_func
MusicPlayerFadeOut:
    swi		0x24
    bx		lr

    .align	2
    .global	MultiBoot
    .thumb_func
MultiBoot:
    swi		0x25
    bx		lr

    .align	2
    .global	HardReset
    .thumb_func
HardReset:
    swi		0x26
    bx		lr

    .align	2
    .global	CustomHalt
    .thumb_func
CustomHalt:
    swi		0x27
    bx		lr

    .align	2
    .global	SoundDriverVSyncOff
    .thumb_func
SoundDriverVSyncOff:
    swi		0x28
    bx		lr

    .align	2
    .global	SoundDriverVSyncOn
    .thumb_func
SoundDriverVSyncOn:
    swi		0x29
    bx		lr

    .align	2
    .global	GetJumpList
    .thumb_func
GetJumpList:
    swi		0x2A
    bx		lr

